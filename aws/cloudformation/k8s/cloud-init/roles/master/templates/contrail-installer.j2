---
apiVersion: v1
kind: Namespace
metadata:
 name: "contrail"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: env
  namespace: contrail
data:
  AAA_MODE: "{{ aaa_mode }}"
  ANALYTICS_API_VIP: "{{ groups['masters'][0] }}"
  ANALYTICS_NODES: "{{ groups['masters'][0] }}"
  ANALYTICSDB_NODES: "{{ groups['masters'][0] }}"
  AUTH_MODE: "{{ auth_mode }}"
  CLOUD_ORCHESTRATOR: "{{ cloud_orchestrator }}"
  CONFIG_API_VIP: "{{ groups['masters'][0] }}"
  CONFIG_NODES: "{{ groups['masters'][0] }}"
  CONFIGDB_NODES: "{{ groups['masters'][0] }}"
  CONTROL_NODES: "{{ groups['masters'][0] }}"
  CONTROLLER_NODES: "{{ groups['masters'][0] }}"
  KAFKA_NODES: "{{ groups['masters'][0] }}"
  LOG_LEVEL: "{{ log_level }}"
  METADATA_PROXY_SECRET: "{{ metadata_proxy_secret }}"
  PHYSICAL_INTERFACE: "{{ vrouter_physical_interface }}"
  RABBITMQ_NODES: "{{ groups['masters'][0] }}"
  RABBITMQ_NODE_PORT: "{{ rabbitmq_node_port }}"
  REDIS_NODES: "{{ groups['masters'][0] }}"
  WEBUI_NODES: "{{ groups['masters'][0] }}"
  WEBUI_VIP: "{{ groups['masters'][0] }}"
  ZOOKEEPER_NODES: "{{ groups['masters'][0] }}"
  KUBERNETES_CLUSTER_NETWORK: "{'domain': 'default-domain', 'project': 'default', 'name': 'cluster-network'}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nodemgr-config
  namespace: contrail
data:
  DOCKER_HOST: "unix://mnt/docker.sock"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contrail-analyticsdb-config
  namespace: contrail
data:
  CASSANDRA_SEEDS: "{{ groups['masters'][0] }}"
  CASSANDRA_CLUSTER_NAME: Contrail
  CASSANDRA_START_RPC: "true"
  CASSANDRA_LISTEN_ADDRESS: auto
  CASSANDRA_PORT: "9160"
  CASSANDRA_CQL_PORT: "9042"
  CASSANDRA_SSL_STORAGE_PORT: "7001"
  CASSANDRA_STORAGE_PORT: "7000"
  CASSANDRA_JMX_LOCAL_PORT: "7200"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contrail-configdb-config
  namespace: kube-system
data:
  CASSANDRA_SEEDS: "{{ groups['masters'][0] }}"
  CASSANDRA_CLUSTER_NAME: ContrailConfigDB
  CASSANDRA_START_RPC: "true"
  CASSANDRA_LISTEN_ADDRESS: auto
  CASSANDRA_PORT: "9161"
  CASSANDRA_CQL_PORT: "9041"
  CASSANDRA_SSL_STORAGE_PORT: "7011"
  CASSANDRA_STORAGE_PORT: "7010"
  CASSANDRA_JMX_LOCAL_PORT: "7201"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: contrail
data:
  RABBITMQ_NODES: "{{ groups['masters'][0] }}"
  RABBITMQ_NODE_PORT: "{{ rabbitmq_node_port }}"
  RABBITMQ_ERLANG_COOKIE: "47EFF3BB-4786-46E0-A5BB-58455B3C2CB4"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contrail-config-zookeeper
  namespace: contrail
data:
  ZOOKEEPER_PORT: "{{ zookeeper_port }}"
  ZOOKEEPER_PORTS: "{{ zookeeper_ports }}"
  ZOOKEEPER_NODES: "{{ groups['masters'][0] }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contrail-analytics-zookeeper
  namespace: contrail
data:
  ZOOKEEPER_PORT: "{{ zookeeper_analytics_port }}"
  ZOOKEEPER_PORTS: "{{ zookeeper_analytics_ports }}"
  ZOOKEEPER_NODES: "{{ groups['masters'][0] }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-manager-config
  namespace: contrail
data:
  KUBERNETES_API_SERVER: "{{ groups['masters'][0] }}"
  KUBERNETES_API_SECURE_PORT: "{{ kubernetes_api_secure_port }}"
  K8S_TOKEN_FILE: "/tmp/serviceaccount/token"
# Containers section
# Meta information section
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contrail-kube-manager
  namespace: contrail
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: contrail-kube-manager
  namespace: contrail
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: contrail-kube-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contrail-kube-manager
subjects:
- kind: ServiceAccount
  name: contrail-kube-manager
  namespace: contrail
---
apiVersion: v1
kind: Secret
metadata:
  name: contrail-kube-manager-token
  namespace: contrail
  annotations:
    kubernetes.io/service-account.name: contrail-kube-manager
type: kubernetes.io/service-account-token
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: config-zookeeper
  namespace: contrail
  labels:
    app: config-zookeeper
spec:
  template:
    metadata:
      labels:
        app: config-zookeeper
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: zookeeper
        image: "{{ contrail_registry }}/contrail-external-zookeeper:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/lib/zookeeper
          name: zookeeper-data
        - mountPath: /var/log/zookeeper
          name: zookeeper-logs
      volumes:
      - name: zookeeper-data
        hostPath:
          path: /var/lib/contrail/zookeeper
      - name: zookeeper-logs
        hostPath:
          path: /var/log/contrail/zookeeper
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kafka
  namespace: contrail
  labels:
    app: kafka
spec:
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: kafka
        image: "{{ contrail_registry }}/contrail-external-kafka:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-analyticsdb
  namespace: contrail
  labels:
    app: contrail-analyticsdb
spec:
  template:
    metadata:
      labels:
        app: contrail-analyticsdb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-analyticsdb
        image: "{{ contrail_registry }}/contrail-external-cassandra:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-analyticsdb-config
        volumeMounts:
        - mountPath: /var/lib/cassandra
          name: analyticsdb-data
        - mountPath: /var/log/cassandra
          name: analyticsdb-log
      volumes:
      - name: analyticsdb-data
        hostPath:
          path: /var/lib/contrail/analyticsdb
      - name: analyticsdb-log
        hostPath:
          path: /var/log/contrail/analyticsdb
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-configdb
  namespace: contrail
  labels:
    app: contrail-configdb
spec:
  template:
    metadata:
      labels:
        app: contrail-configdb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-configdb
        image: "{{ contrail_registry }}/contrail-external-cassandra:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-configdb-config
        volumeMounts:
        - mountPath: /var/lib/cassandra
          name: configdb-data
        - mountPath: /var/log/cassandra
          name: configdb-log
      volumes:
      - name: configdb-data
        hostPath:
          path: /var/lib/contrail/configdb
      - name: configdb-log
        hostPath:
          path: /var/log/contrail/configdb
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-analytics-zookeeper
  namespace: contrail
  labels:
    app: zookeeper
spec:
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: zookeeper
        image: "{{ contrail_registry }}/contrail-external-zookeeper:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/lib/zookeeper
          name: zookeeper-data
        - mountPath: /var/log/zookeeper
          name: zookeeper-logs
        volumeMounts:
        - mountPath: /data
          name: analytics-zookeeper-data
        - mountPath: /datalog
          name: analytics-zookeeper-datalog
      volumes:
      - name: analytics-zookeeper-data
        hostPath:
          path: /var/lib/analytics_zookeeper_data
      - name: analytics-zookeeper-datalog
        hostPath:
          path: /var/lib/analytics_zookeeper_datalog
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-analytics
  namespace: contrail
  labels:
    app: contrail-analytics
spec:
  template:
    metadata:
      labels:
        app: contrail-analytics
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-analytics-api
        image: "{{ contrail_registry }}/contrail-analytics-api:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-collector
        image: "{{ contrail_registry }}/contrail-analytics-collector:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-alarm-gen
        image: "{{ contrail_registry }}/contrail-analytics-alarm-gen:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-query-engine
        image: "{{ contrail_registry }}/contrail-analytics-query-engine:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-snmp-collector
        image: "{{ contrail_registry }}/contrail-analytics-snmp-collector:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-topology
        image: "{{ contrail_registry }}/contrail-analytics-topology:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-analytics-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: contrail-analytics-nodemgr
        image: "{{ contrail_registry }}/contrail-nodemgr:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: nodemgr-config
        - configMapRef:
            name: contrail-analytics-zookeeper
        env:
        - name: NODE_TYPE
          value: analytics
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: analytics-logs
        hostPath:
          path: /var/log/contrail/analytics
      - name: docker-unix-socket
        hostPath:
          path: /var/run
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-controller-control
  namespace: contrail
  labels:
    app: contrail-controller-control
spec:
  template:
    metadata:
      labels:
        app: contrail-controller-control
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-controller-control
        image: "{{ contrail_registry }}/contrail-controller-control-control:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: control-logs
      - name: contrail-controller-control-dns
        image: "{{ contrail_registry }}/contrail-controller-control-dns:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        volumeMounts:
        - mountPath: /etc/contrail
          name: dns-config
        - mountPath: /var/log/contrail
          name: control-logs
      - name: contrail-controller-control-named
        image: "{{ contrail_registry }}/contrail-controller-control-named:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/contrail
          name: dns-config
        - mountPath: /var/log/contrail
          name: control-logs
      - name: contrail-controller-nodemgr
        image: "{{ contrail_registry }}/contrail-nodemgr:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: nodemgr-config
        - configMapRef:
            name: contrail-config-zookeeper
        env:
        - name: NODE_TYPE
          value: control
        volumeMounts:
        - mountPath: /var/log/contrail
          name: control-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: control-logs
        hostPath:
          path: /var/log/contrail/control
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: dns-config
        emptyDir: {}
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-controller-config
  namespace: contrail
  labels:
    app: contrail-controller-config
spec:
  template:
    metadata:
      labels:
        app: contrail-controller-config
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-controller-config-api
        image: "{{ contrail_registry }}/contrail-controller-config-api:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: contrail-controller-config-devicemgr
        image: "{{ contrail_registry }}/contrail-controller-config-devicemgr:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: contrail-controller-config-schema
        image: "{{ contrail_registry }}/contrail-controller-config-schema:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: contrail-controller-config-svcmonitor
        image: "{{ contrail_registry }}/contrail-controller-config-svcmonitor:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: contrail-controller-config-nodemgr
        image: "{{ contrail_registry }}/contrail-nodemgr:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: nodemgr-config
        - configMapRef:
            name: contrail-config-zookeeper
        env:
        - name: NODE_TYPE
          value: config
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: config-logs
        hostPath:
          path: /var/log/contrail/config
      - name: docker-unix-socket
        hostPath:
          path: /var/run
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-controller-webui
  namespace: contrail
  labels:
    app: contrail-controller-webui
spec:
  template:
    metadata:
      labels:
        app: contrail-controller-webui
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: contrail-controller-webui-job
        image: "{{ contrail_registry }}/contrail-controller-webui-job:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: webui-logs
      - name: contrail-controller-webui-web
        image: "{{ contrail_registry }}/contrail-controller-webui-web:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: webui-logs
      volumes:
      - name: webui-logs
        hostPath:
          path: /var/log/contrail/webui
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: redis
  namespace: contrail
  labels:
    app: redis
spec:
  template:
    metadata:
      labels:
        app: redis
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: redis
        image: "redis:4.0.2"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        volumeMounts:
        - mountPath: /var/lib/redis
          name: redis-data
        - mountPath: /var/log/redis
          name: redis-logs
      volumes:
      - name: redis-data
        hostPath:
          path: /var/lib/contrail/redis
      - name: redis-logs
        hostPath:
          path: /var/log/contrail/redis
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: rabbitmq
  namespace: contrail
  labels:
    app: rabbitmq
spec:
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      hostNetwork: true
      containers:
      - name: rabbitmq
        image: "{{ contrail_registry }}/contrail-external-rabbitmq:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: rabbitmq-config
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        - mountPath: /var/log/rabbitmq
          name: rabbitmq-logs
      volumes:
      - name: rabbitmq-data
        hostPath:
          path: /var/lib/contrail/rabbitmq
      - name: rabbitmq-logs
        hostPath:
          path: /var/log/contrail/rabbitmq
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-kube-manager
  namespace: contrail
  labels:
    app: contrail-kube-manager
spec:
  template:
    metadata:
      labels:
        app: contrail-kube-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller" 
                operator: Exists
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      automountServiceAccountToken: false
      hostNetwork: true
      containers:
      - name: contrail-kube-manager
        image: "{{ contrail_registry }}/contrail-kubernetes-kube-manager:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: kube-manager-config
        - configMapRef:
            name: contrail-config-zookeeper
        volumeMounts:
        - mountPath: /var/log/contrail
          name: kube-manager-logs
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      volumes:
      - name: kube-manager-logs
        hostPath:
          path: /var/log/contrail/kube-manager
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: contrail-agent
  namespace: contrail
  labels:
    app: contrail-agent
spec:
  template:
    metadata:
      labels:
        app: contrail-agent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "opencontrail.org/controller"
                operator: DoesNotExist
      automountServiceAccountToken: false
      hostNetwork: true
      initContainers:
      - name: contrail-vrouter-kernel-init
        image: "{{ contrail_registry }}/contrail-vrouter-kernel-init:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
      - name: contrail-kubernetes-cni-init
        image: "{{ contrail_registry }}/contrail-kubernetes-cni-init:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        volumeMounts:
        - mountPath: /var/lib/contrail
          name: var-lib-contrail
        - mountPath: /host/etc_cni
          name: etc-cni
        - mountPath: /host/opt_cni_bin
          name: opt-cni-bin
        - mountPath: /host/log_cni
          name: var-log-contrail-cni
        - mountPath: /var/log/contrail
          name: agent-logs
      containers:
      - name: contrail-vrouter-agent
        image: "{{ contrail_registry }}/contrail-vrouter-agent:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        volumeMounts:
        - mountPath: /var/log/contrail
          name: agent-logs
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /var/lib/contrail
          name: var-lib-contrail
        - mountPath: /var/crashes
          name: var-crashes
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      - name: contrail-agent-nodemgr
        image: "{{ contrail_registry }}/contrail-nodemgr:{{ contrail_container_tag }}"
        imagePullPolicy: ""
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: env
        - configMapRef:
            name: nodemgr-config
        env:
        - name: NODE_TYPE
          value: vrouter
        volumeMounts:
        - mountPath: /var/log/contrail
          name: agent-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: var-lib-contrail
        hostPath:
          path: /var/lib/contrail
      - name: var-crashes
        hostPath:
          path: /var/contrail/crashes
      - name: etc-cni
        hostPath:
          path: /etc/cni
      - name: opt-cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: var-log-contrail-cni
        hostPath:
          path: /var/log/contrail/cni
      - name: agent-logs
        hostPath:
          path: /var/log/contrail/agent
